"use strict";(self.webpackChunknext_app=self.webpackChunknext_app||[]).push([[623],{"./features/TCG/components/PackSelector/PackSelectorContainer.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithInteraction:()=>WithInteraction,__namedExportsOrder:()=>__namedExportsOrder,default:()=>PackSelectorContainer_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),CardSwiperContainer=__webpack_require__("./features/TCG/components/CardSwiper/CardSwiperContainer.tsx"),PackSelector=__webpack_require__("./features/TCG/components/PackSelector/PackSelector.tsx");const PackSelectorContainer=({packs,fallback})=>{const[selectedPack,setSelectedPack]=(0,react.useState)(null),[isPackOpened,setIsPackOpened]=(0,react.useState)(!1);(0,react.useEffect)((()=>{packs&&packs.length>0&&setSelectedPack(packs[0])}),[packs]);return packs?(0,jsx_runtime.jsx)(Box.A,{children:isPackOpened?selectedPack&&(0,jsx_runtime.jsx)(CardSwiperContainer.m,{cards:selectedPack.cards,onComplete:()=>{setIsPackOpened(!1)}}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(PackSelector.A,{packs,onSlideChange:pack=>{setSelectedPack(pack)},onOpenPack:()=>{selectedPack&&setIsPackOpened(!0)}})})}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:fallback})},PackSelector_PackSelectorContainer=PackSelectorContainer;PackSelectorContainer.__docgenInfo={description:"",methods:[],displayName:"PackSelectorContainer",props:{packs:{required:!0,tsType:{name:"union",raw:"Pack[] | []",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  id: number;\n  name: string;\n  img: ReversibleImage; // パックの画像情報\n  cards: Card[]; // 含まれるカード\n}",signature:{properties:[{key:"id",value:{name:"number",required:!0}},{key:"name",value:{name:"string",required:!0}},{key:"img",value:{name:"signature",type:"object",raw:"{\n  front: PackImage;\n  back: PackImage;\n}",signature:{properties:[{key:"front",value:{name:"signature",type:"object",raw:"{\n  url: string;\n  alt: string;\n}",signature:{properties:[{key:"url",value:{name:"string",required:!0}},{key:"alt",value:{name:"string",required:!0}}]},required:!0}},{key:"back",value:{name:"signature",type:"object",raw:"{\n  url: string;\n  alt: string;\n}",signature:{properties:[{key:"url",value:{name:"string",required:!0}},{key:"alt",value:{name:"string",required:!0}}]},required:!0}}]},required:!0}},{key:"cards",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  id: number;\n  name: string;\n  rarity: 'common' | 'super-rare' | 'rare' | 'ultra-rare';\n  img: string;\n}",signature:{properties:[{key:"id",value:{name:"number",required:!0}},{key:"name",value:{name:"string",required:!0}},{key:"rarity",value:{name:"union",raw:"'common' | 'super-rare' | 'rare' | 'ultra-rare'",elements:[{name:"literal",value:"'common'"},{name:"literal",value:"'super-rare'"},{name:"literal",value:"'rare'"},{name:"literal",value:"'ultra-rare'"}],required:!0}},{key:"img",value:{name:"string",required:!0}}]}}],raw:"Card[]",required:!0}}]}}],raw:"Pack[]"},{name:"tuple",raw:"[]",elements:[]}]},description:""},fallback:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};var packs=__webpack_require__("./features/TCG/mocks/packs.ts");const PackSelectorContainer_stories={title:"features/TCG/PackSelector/PackSelectorContainer",component:PackSelector_PackSelectorContainer,args:{packs:packs.l}},Default={args:{packs:packs.l,fallback:null}},WithInteraction={args:{packs:packs.l,fallback:(0,jsx_runtime.jsx)("div",{children:"Loading..."})},play:async({canvasElement,step})=>{const canvas=(0,dist.ux)(canvasElement);await step("パックを開く",(async()=>{const openButton=await canvas.getByRole("button",{name:/開封する/i});await dist.Q4.click(openButton)})),await step("ナビゲーションボタンでスライドを進める",(async()=>{const modal=await dist.nj.findByRole("dialog"),nextButton=(0,dist.ux)(modal).getByRole("button",{name:/めくる/i});for(const card of packs.l[0].cards){const cardName=await dist.nj.findByText(card.name);(0,dist.E3)(cardName).toBeInTheDocument(),await dist.Q4.click(nextButton),await new Promise((resolve=>setTimeout(resolve,500)))}const endButton=(0,dist.ux)(modal).getByRole("button",{name:/終了/i});(0,dist.E3)(endButton).toBeInTheDocument()})),await step("終了ボタンでモーダルが閉じること",(async()=>{const endButton=dist.nj.getByRole("button",{name:/終了/i});await dist.Q4.click(endButton),(0,dist.E3)(dist.nj.queryByRole("dialog")).not.toBeInTheDocument()}))}},__namedExportsOrder=["Default","WithInteraction"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    packs: mockPacks,\n    fallback: null\n  }\n}",...Default.parameters?.docs?.source}}},WithInteraction.parameters={...WithInteraction.parameters,docs:{...WithInteraction.parameters?.docs,source:{originalSource:"{\n  args: {\n    packs: mockPacks,\n    fallback: <div>Loading...</div>\n  },\n  play: async ({\n    canvasElement,\n    step\n  }) => {\n    const canvas = within(canvasElement);\n    await step('パックを開く', async () => {\n      const openButton = await canvas.getByRole('button', {\n        name: /開封する/i\n      });\n      await userEvent.click(openButton);\n    });\n    await step('ナビゲーションボタンでスライドを進める', async () => {\n      const modal = await screen.findByRole('dialog');\n      const nextButton = within(modal).getByRole('button', {\n        name: /めくる/i\n      });\n      for (const card of mockPacks[0].cards) {\n        const cardName = await screen.findByText(card.name);\n        expect(cardName).toBeInTheDocument();\n        await userEvent.click(nextButton);\n        await new Promise(resolve => setTimeout(resolve, 500)); // Optional delay for better simulation\n      }\n      const endButton = within(modal).getByRole('button', {\n        name: /終了/i\n      });\n      expect(endButton).toBeInTheDocument();\n    });\n    await step('終了ボタンでモーダルが閉じること', async () => {\n      const endButton = screen.getByRole('button', {\n        name: /終了/i\n      });\n      await userEvent.click(endButton);\n      expect(screen.queryByRole('dialog')).not.toBeInTheDocument();\n    });\n  }\n}",...WithInteraction.parameters?.docs?.source}}}},"./features/TCG/components/CardSwiper/CardSwiperContainer.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>CardSwiperContainer});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_barrel_optimize_names_Box_Modal_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),_barrel_optimize_names_Box_Modal_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/Modal/Modal.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_CardSwiper__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./features/TCG/components/CardSwiper/CardSwiper.tsx");const CardSwiperContainer=({cards,onComplete})=>{const[open,setOpen]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!0);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_Box_Modal_mui_material__WEBPACK_IMPORTED_MODULE_3__.A,{sx:{display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",width:"100%"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_Box_Modal_mui_material__WEBPACK_IMPORTED_MODULE_4__.A,{open,"aria-labelledby":"modal-modal-title","aria-describedby":"modal-modal-description","aria-modal":"true",role:"dialog",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_CardSwiper__WEBPACK_IMPORTED_MODULE_2__.b,{cards,onClose:()=>{setOpen(!1),onComplete&&onComplete()}})})})};CardSwiperContainer.__docgenInfo={description:"",methods:[],displayName:"CardSwiperContainer",props:{cards:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  id: number;\n  name: string;\n  rarity: 'common' | 'super-rare' | 'rare' | 'ultra-rare';\n  img: string;\n}",signature:{properties:[{key:"id",value:{name:"number",required:!0}},{key:"name",value:{name:"string",required:!0}},{key:"rarity",value:{name:"union",raw:"'common' | 'super-rare' | 'rare' | 'ultra-rare'",elements:[{name:"literal",value:"'common'"},{name:"literal",value:"'super-rare'"},{name:"literal",value:"'rare'"},{name:"literal",value:"'ultra-rare'"}],required:!0}},{key:"img",value:{name:"string",required:!0}}]}}],raw:"CardType[]"},description:""},onComplete:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}}}}]);