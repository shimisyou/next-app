"use strict";(self.webpackChunknext_app=self.webpackChunknext_app||[]).push([[318],{"./features/TCG/components/PackSelector/PackSelector.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_test__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_mocks_packs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./features/TCG/mocks/packs.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"features/TCG/PackSelector/PackSelector",component:__webpack_require__("./features/TCG/components/PackSelector/PackSelector.tsx").A,argTypes:{}},Default={args:{packs:_mocks_packs__WEBPACK_IMPORTED_MODULE_1__.l,onOpenPack:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)(),onSlideChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()},play:async({canvasElement,args})=>{const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.ux)(canvasElement),openButton=await canvas.findByRole("button",{name:/開封する/i});await _storybook_test__WEBPACK_IMPORTED_MODULE_0__.Q4.click(openButton),(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.E3)(args.onOpenPack).toHaveBeenCalledTimes(1)}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    packs: mockPacks,\n    onOpenPack: fn(),\n    onSlideChange: fn()\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // ボタンを取得\n    const openButton = await canvas.findByRole('button', {\n      name: /開封する/i\n    });\n\n    // ボタンをクリック\n    await userEvent.click(openButton);\n\n    // モック関数が呼ばれたかを確認\n    expect(args.onOpenPack).toHaveBeenCalledTimes(1);\n  }\n}",...Default.parameters?.docs?.source}}}},"./components/elements/Button/NeumorphicButton/NeumorphicButton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_barrel_optimize_names_Button_Typography_mui_material__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),_barrel_optimize_names_Button_Typography_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/Typography/Typography.js");const NeumorphicButton=({children,...props})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_Button_Typography_mui_material__WEBPACK_IMPORTED_MODULE_1__.A,{variant:"contained",color:"primary",sx:{bgcolor:"#e0e0e0",boxShadow:"5px 5px 15px #bebebe, -5px -5px 15px #ffffff",color:"#333",borderRadius:"50px",padding:"10px 20px","&:hover":{bgcolor:"#d0d0d0"}},...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_barrel_optimize_names_Button_Typography_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{variant:"h6",sx:{fontWeight:"bold",textShadow:"0 0 5px rgba(0, 0, 0, 0.2)"},children})}),__WEBPACK_DEFAULT_EXPORT__=NeumorphicButton;NeumorphicButton.__docgenInfo={description:"",methods:[],displayName:"NeumorphicButton",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}},composes:["ButtonProps"]}},"./features/TCG/mocks/packs.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>generateCards,l:()=>mockPacks});const BASE_URL=__webpack_require__("./node_modules/process/browser.js").env.NEXT_PUBLIC_BASE_URL||"/next-app/storybook",generateRandomRarity=()=>{const random=Math.random();return random<=.001?"ultra-rare":random<=.2?"super-rare":random<=.5?"rare":"common"},generateCards=(packId,cardCount)=>Array.from({length:cardCount},((_,index)=>{const cardId=100*packId+index+1,randomImageNumber=Math.floor(10*Math.random())+1;return{id:cardId,name:`Card ${cardId}`,rarity:generateRandomRarity(),img:`${BASE_URL}/cards/series1/${String(randomImageNumber).padStart(2,"0")}.png`}})),mockPacks=Array.from({length:10},((_,index)=>{const packId=index+1;return{id:packId,name:`Pack ${packId}`,img:{front:{url:`${BASE_URL}/cards/series1/09.png`,alt:`Front of Pack ${packId}`},back:{url:`${BASE_URL}/pack1.png`,alt:`Back of Pack ${packId}`}},cards:generateCards(packId,5)}}))}}]);